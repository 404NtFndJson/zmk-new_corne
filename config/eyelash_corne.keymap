#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        layer4 {
            bindings = <&tog 4>;
            key-positions = <44 45>;
        };

        Caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <0 43>;
        };

        Esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        OffScreen {
            bindings = <&kp LG(LC(Q))>;
            key-positions = <0 12>;
        };

        RT {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <4 5>;
        };

        YU {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <7 8>;
        };

        FG {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <17 18>;
        };

        HJ {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <22 23>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E        &kp R      &kp T                              &kp UP               &kp Y            &kp U        &kp I          &kp O    &kp P                   &kp BSPC
&kp LEFT_COMMAND  &kp A  &kp S  &mt LCTRL D  &kp F      &kp G                    &kp LEFT  &kp END   &kp RIGHT  &kp H            &kp J        &mt RCTRL K    &kp L    &mt RIGHT_COMMAND SEMI  &kp ENTER
&kp LSHFT         &kp Z  &kp X  &kp C        &kp V      &kp B        &kp HOME              &kp DOWN             &kp N            &kp M        &kp COMMA      &kp DOT  &kp FSLH                &kp LSHFT
                                &kp LCTRL    &kp SPACE  &lt 2 SPACE                                             &lt 3 BACKSPACE  &lt 1 SPACE  &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp DOWN UP>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp ESC  &trans  &trans    &kp N7  &kp N8  &kp N9                                &mmv MOVE_UP                     &trans         &trans    &kp UP    &trans     &trans  &kp BSPC
&trans   &trans  &kp HOME  &kp N4  &kp N5  &kp N6                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp PAGE_UP    &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans   &trans  &kp END   &kp N1  &kp N2  &kp N3  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp PAGE_DOWN  &trans    &trans    &trans     &trans  &trans
                           &trans  &kp N0  &trans                                                                 &trans         &trans    &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp ESC  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH
&trans   &bt BT_CLR    &mkp RCLK     &mkp MCLK  &mkp LCLK  &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp TILDE  &kp MINUS  &kp EQUAL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE
&trans   &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp PIPE   &kp PLUS   &kp COMMA  &kp PERIOD            &kp QUESTION           &trans
                                     &trans     &kp SPACE  &trans                                                                &trans     &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&trans  &kp F1        &kp F2        &kp F3      &kp F4  &kp F5                                &mmv MOVE_UP                     &kp F6  &kp F7          &kp F8            &kp F9      &kp F10     &kp F11
&trans  &kp C_VOL_DN  &kp C_VOL_UP  &kp K_MUTE  &trans  &trans                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &trans  &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp DELETE  &kp F12
&trans  &trans        &trans        &trans      &trans  &trans  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans  &trans          &bootloader       &sys_reset  &kp INS     &trans
                                    &trans      &trans  &trans                                                                 &trans  &trans          &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_4 {
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &trans           &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans          &rgb_ug RGB_ON   &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans          &rgb_ug RGB_OFF  &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                                  &trans           &trans           &trans                                    &to 0   &trans  &trans
            >;
        };
    };
};
